#include <stdio.h>
#include <math.h>

int main()
{
   
}
void bresenham(int x1, int y1, int x2, int y2)
{
 int dx,dy,p,p2,xy2,x,y,xf;
 dx = x2-x1;
 dy = y2-y1;
 p = 2 * dy - dx;
 p2 = 2 * dy; //incrementa E
 xy2 = 2 * (dy-dx); //incrementa NE
 if (x1>x2)
 {x = x2; y = y2; xf = x1; }
 else
 {x = x1; y = y1; xf = x2; }
 printf("(%d,%d)\n p=%d \n p = p + 2dy - 2dx \n",x,y,p);
 while (x<xf)
 {
 x++;
 if (p<0)
 p += p2;
 else
 {
 y++;
 p += xy2;
 }
  printf("(%d,%d)\n p=%d \n p = p + 2dy\n",x,y,p);
 }
}
void DDA(int X2,int Y2,int X1,int Y1)
{
    float step = fmax(fabs(X2 - X1),fabs(Y2 - Y1));
    float Xinc = (X2 - X1)/step;
    float Yinc = (Y2 - Y1)/step;
    printf("%f \n",Xinc);
    printf("%f \n \n ",Yinc);
    float Xf = X1;
    float Yf = Y1;
    if(Xinc == 1){
        for(int i = 0; i < fabs(X2 - X1);i++){
            Xf += Xinc;
            Yf += Yinc;
            printf("%f \n",Xf);
            printf("%f  \n \n",Yf);
        }
    }
    if(Yinc == 1){
        for(int i = 0; i < fabs(Y2 - Y1);i++){
            Xf += Xinc;
            Yf += Yinc;
            printf("%f \n",Xf);
            printf("%f  \n \n",Yf);
        }
    }
}
void bresenhamcirc(int r,)
{
    int xi = 0, yi = r,p=1-r;
    
}
