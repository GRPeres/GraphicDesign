#include <stdio.h>
#include <math.h>
#include <windows.h>

//Método que faz o apontamento das coordenadas X e Y
void irParaXY(int x, int y) {
    COORD coord;
    coord.X = (short) x;
    coord.Y = (short) y;
    SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), coord);
}

void Cleanse(void) {
        irParaXY(0,1);
        printf("                                                                                                  ");
        irParaXY(0,2);
        printf("                                                                                                  ");
        irParaXY(0,3);
        printf("                                                                                                  ");
        irParaXY(0,4);
        printf("                                                                                                  ");
        irParaXY(0,1);
}

void planoCartesiano(void) {
    int vertical, horizontal;
    for (vertical = 0; vertical < 34 ; vertical++) {//Reta que separa o plano na vertical
        irParaXY(50, vertical);
        printf("|");
    }
    for (horizontal = 0; horizontal < 120; horizontal++) {//Reta que separa o plano na horizontal
        irParaXY(horizontal, 17);
        printf("-");
    }
    irParaXY(50, 17);
    printf("X");//Ponto central
}

void printei(int x, int y){
    irParaXY(50 + x,17-y);
    printf("F");
}

void bresenham(int x1, int y1, int x2, int y2){
    int dx,dy,p,p2,xy2,x,y,xf;
    dx = x2-x1;
    dy = y2-y1;
    p = 2 * dy - dx;
    p2 = 2 * dy; //incrementa E
    xy2 = 2 * (dy-dx); //incrementa NE
    if (x1>x2){
            x = x2; y = y2; xf = x1;
        }
    else{
            x = x1; y = y1; xf = x2;
        }
    printei(x,y);
    while (x<xf && y2>y1 && x2 > x1){
        x++;
        if (p<0){
        p += p2;
        }
        else{
            y++;
            p += xy2;
        }
        printei(x,y);
    }
    while (x<xf && y2>y1 && x2 < x1){
        x++;
        if (p<0){
        p += p2;
        }
        else{
            y--;
            p += xy2;
        }
        printei(x,y);
    }
    while (x<xf && y2<y1 && x2 > x1){
        x++;
        if (p>0){
        p += p2;
        }
        else{
            y--;
            p += xy2;
        }
        printei(x,y);
    }
    while (x<xf && y2<y1 && x2 < x1){
        x++;
        if (p>0){
        p += p2;
        }
        else{
            y++;
            p += xy2;
        }
        printei(x,y);
    }
}
void DDA(int X2,int Y2,int X1,int Y1)
{
    float step = fmax(fabs(X2 - X1),fabs(Y2 - Y1));
    float Xinc = (X2 - X1)/step;
    float Yinc = (Y2 - Y1)/step;
    float Xf = X1;
    float Yf = Y1;
    printei(Xf,Yf);
    if(Xinc == 1 || Xinc == -1){
        for(int i = 0; i < fabs(X2 - X1);i++){
            Xf += Xinc;
            Yf += Yinc;
            printei(Xf,Yf);
        }
    }
    else if(Yinc == 1|| Yinc == -1){
        for(int i = 0; i < fabs(Y2 - Y1);i++){
            Xf += Xinc;
            Yf += Yinc;
            printei(Xf,Yf);
        }
    }
}
void bresenhamcirc(int r){
    int p=1-r, y = r;
    for(int x = 0; x < r && x < y; x++){
        if(p < 0){
            p = p+2*x+1;
        }
        else{
            y--;
            p = p+2*x+1-2*y;
        }
        //1quad
        printei(x,y);
        printei(y,x);
        //2quad
        printei(-x,y);
        printei(y,-x);
        //3quad
        printei(-x,-y);
        printei(-y,-x);
        //4quad
        printei(x,-y);
        printei(-y,x);
    }
}

int main(){
    int n,x1=0,x2=0,y1=0,y2=0;
    printf("Escolha o número referente ao desafio desejado: \n (0) - Sair \n (1) - Imprime uma reta (Algoritmo DDA) \n (2) - Imprime uma reta (Algoritmo de Bresenham) \n (3) - Imprime o tracado de um circulo (Algoritmo de Bresenham)");
    scanf("%d",&n);
    planoCartesiano();
    switch(n){
    case 1:
        irParaXY(0,0);
        printf("Digite 4 numeros, correspondetes as variaveis (x1,y1) e (x2,y2) que formam as extremidades da reta");
        Cleanse();
        scanf("%d%d%d%d",&x2,&y2,&x1,&y1);
        DDA(x2,y2,x1,y1);
        break;
    case 2:
        irParaXY(0,0);
        printf("Digite 4 numeros, correspondetes as variaveis (x1,y1) e (x2,y2) que formam as extremidades da reta");
        Cleanse();
        scanf("%d%d%d%d",&x1,&y1,&x2,&y2);
        bresenham(x1,y1,x2,y2);
        break;
    case 3:
        irParaXY(0,0);
        printf("Digite 1 numero, correspondente ao raio do circulo");
        Cleanse();
        scanf("%d",&x1);
        bresenhamcirc(x1);
    }
    irParaXY(0,1);
    return 0;
}
